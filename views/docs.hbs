<div class="nav-bar">
    <a href="{{baseUrl}}" class="nav-link">cd ..</a>
</div>

<h1>Paste69 API Documentation</h1>

<!-- Table of Contents -->
<h2>Table of Contents</h2>
<ul>
    <li><a href="#getting-started">Getting Started</a></li>
    <li><a href="#file-upload-endpoints">File Upload Endpoints</a></li>
    <li><a href="#integrations">Integrations</a></li>
    {{#if apiKeysEnabled}}
    <li><a href="#authentication">Authentication & API Keys</a></li>
    <li><a href="#url-shortener">URL Shortener</a></li>
    <li><a href="#url-management">URL Management</a></li>
    {{/if}}
    <li><a href="#limits-retention">Limits & Retention</a></li>
    <li><a href="#support">Support</a></li>
</ul>

<section id="getting-started">
    <h2>Getting Started</h2>
    
    <p>All API endpoints accept requests with any of the following content types:</p>
    <ul>
        <li><code>application/x-www-form-urlencoded</code> or <code>multipart/form-data</code> (recommended for simplicity)</li>
        <li><code>application/json</code></li>
        <li><code>application/xml</code> or <code>text/xml</code></li>
    </ul>
    <p>The parameter names remain the same regardless of the content type used. The examples in this documentation use form data for simplicity, as it doesn't require explicitly setting content type headers.</p>
</section>

{{#if apiKeysEnabled}}
<section id="authentication">
    <h2>Authentication & API Keys</h2>
    
    <p>Most endpoints require an API key for authentication. To get started, request an API key:</p>

    <div class="labeled-code-block">
        <span class="command-label curl-label">CURL</span>
        <div class="code-block">
            <code>curl -X POST \
    -d "name=Your Name" \
    -d "email=your@email.com" \
    {{baseUrl}}/keys/request</code>
            <button class="action-btn" data-clipboard data-clipboard-content="curl -X POST -d &quot;name=Your Name&quot; -d &quot;email=your@email.com&quot; {{baseUrl}}/keys/request"><span>Copy</span></button>
        </div>
    </div>

    <p>Once you have your API key, you can use it in one of two ways:</p>

    <h3>1. Authorization Header (Recommended)</h3>
    <div class="labeled-code-block">
        <span class="command-label curl-label">CURL</span>
        <div class="code-block">
            <code>curl -H "Authorization: Bearer YOUR_API_KEY" {{baseUrl}}/u/list</code>
            <button class="action-btn" data-clipboard data-clipboard-content="curl -H &quot;Authorization: Bearer YOUR_API_KEY&quot; {{baseUrl}}/u/list"><span>Copy</span></button>
        </div>
    </div>

    <h3>2. Query Parameter</h3>
    <div class="labeled-code-block">
        <span class="command-label curl-label">CURL</span>
        <div class="code-block">
            <code>curl "{{baseUrl}}/u/list?api_key=YOUR_API_KEY"</code>
            <button class="action-btn" data-clipboard data-clipboard-content="curl {{baseUrl}}/u/list?api_key=YOUR_API_KEY"><span>Copy</span></button>
        </div>
    </div>

    <h3>API Key Features</h3>
    <ul>
        <li>Increased file retention times</li>
        <li>Access to URL shortening</li>
        <li>Higher rate limits</li>
        <li>File management capabilities</li>
    </ul>

    <h3>Verifying an API Key</h3>
    <div class="labeled-code-block">
        <span class="command-label curl-label">CURL</span>
        <div class="code-block">
            <code>curl -H "Authorization: Bearer YOUR_API_KEY" {{baseUrl}}/keys/verify</code>
            <button class="action-btn" data-clipboard data-clipboard-content="curl -H &quot;Authorization: Bearer YOUR_API_KEY&quot; {{baseUrl}}/keys/verify"><span>Copy</span></button>
        </div>
    </div>
</section>
{{/if}}

<section id="file-upload-endpoints">
    <h2>File Upload Endpoints</h2>

    <strong>1. Multipart Upload</strong>
    <div class="labeled-code-block">
        <span class="command-label curl-label">CURL</span>
        <div class="code-block">
            <code>curl -X POST -F "file=@path/to/file.txt" {{baseUrl}}/p</code>
            <button class="action-btn" data-clipboard data-clipboard-content="curl -X POST -F 'file=@path/to/file.txt' {{baseUrl}}/p"><span>Copy</span></button>
        </div>
    </div>
    <dl>
        <dt>Form fields:</dt>
        <dd>
            <ul>
                <li><code>file</code> - The file to upload</li>
                <li><code>private</code> - (optional) Set to "true" to make the paste private</li>
                <li><code>expires_in</code> - (optional) Duration string for paste expiry (e.g. "24h", "7d")</li>
            </ul>
        </dd>
        <dt>Response:</dt>
        <dd>
            <pre><code id="multipart-upload-response">{
    "id": "abc12345",
    "filename": "example.txt",
    "url": "/abc12345.txt",
    "delete_url": "/delete/abc12345/deletekey123",
    "mime_type": "text/plain",
    "size": 1234,
    "expires_at": "2024-03-21T15:30:00Z",
    "private": false
}</code></pre>
            <button class="action-btn" data-clipboard data-clipboard-selector="#multipart-upload-response"><span>Copy</span></button>
        </dd>
    </dl>

    <strong>2. Raw Upload</strong>
    <div class="labeled-code-block">
        <span class="command-label curl-label">CURL</span>
        <div class="code-block">
            <code>curl -X POST --data-binary @path/to/file.txt {{baseUrl}}/p</code>
            <button class="action-btn" data-clipboard data-clipboard-content="curl -X POST --data-binary @path/to/file.txt {{baseUrl}}/p"><span>Copy</span></button>
        </div>
    </div>
    <dl>
        <dt>Query parameters:</dt>
        <dd>
            <ul>
                <li><code>private</code> - (optional) Set to "true" to make the paste private</li>
                <li><code>expires_in</code> - (optional) Duration string for paste expiry (e.g. "24h", "7d")</li>
                <li><code>filename</code> - (optional) Custom filename for the paste</li>
            </ul>
        </dd>
        <dt>Response:</dt>
        <dd>Same as multipart upload</dd>
    </dl>

    <strong>3. JSON Upload</strong>
    <div class="labeled-code-block">
        <span class="command-label curl-label">CURL</span>
        <div class="code-block">
            <code>curl -X POST -H "Content-Type: application/json" -d @- {{baseUrl}}/p << 'EOF'
{
    "content": "Hello, World!",
    "filename": "hello.txt",
    "private": false,
    "expires_in": "24h"
}
EOF</code>
            <button class="action-btn" data-clipboard data-clipboard-selector="#json-upload-body"><span>Copy</span></button>
        </div>
    </dl>

    <strong>4. Viewing and Managing Pastes</strong>
    <dl>
        <dt>Viewing Pastes:</dt>
        <dd>
            <h3>Content Negotiation</h3>
            <p>When viewing a paste at <code>{{baseUrl}}/p/:id</code>, the response format is determined by the <code>Accept</code> header in your request:</p>
            <ul>
                <li><code>application/xhtml+xml</code>: Returns an HTML page with syntax highlighting (default for browsers)</li>
                <li><code>application/vnd.0x45.paste+json</code>: Returns paste metadata as JSON (for API integrations)</li>
                <li>No Accept header or <code>*/*</code>: Returns the raw content with its original mime type</li>
            </ul>

            <strong>Examples:</strong>
            <div class="labeled-code-block">
                <span class="command-label curl-label">View in Browser</span>
                <div class="code-block">
                    <code>curl {{baseUrl}}/p/YOUR_PASTE_ID</code>
                    <button class="action-btn" data-clipboard data-clipboard-content="curl {{baseUrl}}/p/YOUR_PASTE_ID"><span>Copy</span></button>
                </div>
            </div>

            <div class="labeled-code-block">
                <span class="command-label curl-label">Get Paste Metadata (API)</span>
                <div class="code-block">
                    <code>curl -H "Accept: application/vnd.0x45.paste+json" {{baseUrl}}/p/YOUR_PASTE_ID</code>
                    <button class="action-btn" data-clipboard data-clipboard-content="curl -H &quot;Accept: application/vnd.0x45.paste+json&quot; {{baseUrl}}/p/YOUR_PASTE_ID"><span>Copy</span></button>
                </div>
            </div>

            <div class="labeled-code-block">
                <span class="command-label curl-label">Get Raw Content</span>
                <div class="code-block">
                    <code>curl {{baseUrl}}/p/YOUR_PASTE_ID</code>
                    <button class="action-btn" data-clipboard data-clipboard-content="curl {{baseUrl}}/p/YOUR_PASTE_ID"><span>Copy</span></button>
                </div>
            </div>

            <p>When requesting raw content, the response will have the Content-Type header set to match the original file's mime type. For example, if you uploaded a JSON file, the raw content will be served with <code>Content-Type: application/json</code>.</p>

            <p>If you specify an Accept header, the server will validate that it matches the paste's mime type. For example, if you request <code>Accept: image/png</code> but the paste is a text file, you'll receive a 406 Not Acceptable response. Use <code>Accept: */*</code> or omit the Accept header to accept any content type.</p>

            <p>The JSON metadata response includes information about the paste such as ID, filename, URLs, and expiration time. This format is particularly useful for API integrations.</p>
        </dd>

        <dt>Deleting Pastes:</dt>
        <dd>
            <div class="labeled-code-block">
                <span class="command-label curl-label">CURL</span>
                <div class="code-block">
                    <code>curl -X DELETE {{baseUrl}}/p/:id/:delete_key</code>
                    <button class="action-btn" data-clipboard data-clipboard-content="curl -X DELETE {{baseUrl}}/p/:id/:delete_key"><span>Copy</span></button>
                </div>
            </div>
            <p>The delete key is provided in the response when creating a paste.</p>
        </dd>
    </dl>
</section>

<section id="integrations">
    <h2>Integrations</h2>

    <h3>ShareX Integration</h3>
    <p>Copy and save the following configuration as a <code>.sxcu</code> file, then import it into ShareX:</p>

    <div class="labeled-code-block">
        <span class="command-label json-label">JSON</span>
        <div class="code-block">
            <code>{
    "Version": "15.0.0",
    "Name": "0x45 Uploader",
    "DestinationType": "ImageUploader, TextUploader, FileUploader",
    "RequestMethod": "POST",
    "RequestURL": "{{baseUrl}}/p",
    {{#if apiKeysEnabled}}
    "Headers": {
        "Authorization": "Bearer YOUR_API_KEY"
    },
    {{/if}}
    "Body": "MultipartFormData",
    "FileFormName": "file",
    "URL": "{json:url}"
}</code>
            <button class="action-btn" data-clipboard data-clipboard-selector="#sharex-config"><span>Copy</span></button>
        </div>
    </div>

    <p>After importing, you can set this as your default uploader in ShareX under "Destinations".</p>

    <h3>Flameshot Integration</h3>
    <p>Save this script to use Flameshot with 0x45:</p>

    <div class="labeled-code-block">
        <span class="command-label bash-label">BASH</span>
        <div class="code-block">
            <code>#!/bin/bash

# Detect clipboard command
if command -v wl-copy >/dev/null 2>&1; then
    CLIP_CMD="wl-copy"
elif command -v xclip >/dev/null 2>&1; then
    CLIP_CMD="xclip -selection clipboard"
elif command -v pbcopy >/dev/null 2>&1; then
    CLIP_CMD="pbcopy"
else
    echo "No clipboard command found. Please install xclip, wl-copy, or pbcopy"
    exit 1
fi

filename="/tmp/screenshot-$(date +%Y%m%d-%H%M%S).png"
flameshot gui -r > "$filename"; if [ ! -s "$filename" ]; then
    exit 1
fi

{{#if apiKeysEnabled}}
curl -s -H "Authorization: Bearer YOUR_API_KEY" {{baseUrl}}/p -F file=@"$filename" | jq -r '.url' | $CLIP_CMD
{{else}}
curl -s {{baseUrl}}/p -F file=@"$filename" | jq -r '.url' | $CLIP_CMD
{{/if}}</code>
            <button class="action-btn" data-clipboard data-clipboard-selector="#flameshot-script"><span>Copy</span></button>
        </div>
    </div>

    <p>Save this script somewhere in your PATH (e.g. <code>~/.local/bin/upload-screenshot</code>), make it executable with <code>chmod +x</code>, and bind it to a keyboard shortcut.</p>

    <p>Dependencies:</p>
    <ul>
        <li><code>flameshot</code> - Screenshot tool</li>
        <li><code>curl</code> - For uploading</li>
        <li><code>jq</code> - For parsing JSON response</li>
        <li>One of: <code>wl-copy</code> (Wayland), <code>xclip</code> (X11), or <code>pbcopy</code> (macOS)</li>
    </ul>
</section>

{{#if apiKeysEnabled}}
<section id="url-shortener">
    <h2>URL Shortener</h2>

    <strong>1. Shorten URL</strong>
    <div class="labeled-code-block">
        <span class="command-label curl-label">CURL</span>
        <div class="code-block">
            <code id="json-url-expire-body">curl -X POST \
    -H "Authorization: Bearer YOUR_API_KEY" \
    -d "url=https://example.com" \
    -d "title=Example Website" \
    -d "expires_in=7d" \
    {{baseUrl}}/u</code>
            <button class="action-btn" data-clipboard data-clipboard-content="#json-url-expire-body"><span>Copy</span></button>
        </div>
    </div>
    <dl>
        <dt>Request Body:</dt>
        <dd>
            <ul>
                <li><code>url</code> (required): The URL to shorten</li>
                <li><code>title</code> (optional): Custom title for the URL</li>
                <li><code>expires_in</code> (optional): Duration string (e.g., "24h", "7d", "30d")</li>
                <li><code>expires_at</code> (optional): Date string (YYYY-MM-DD)</li>
            </ul>
        </dd>
    </dl>

    <strong>2. URL Stats</strong>
    <div class="labeled-code-block">
        <span class="command-label curl-label">CURL</span>
        <div class="code-block">
            <code id="json-url-stats-body">curl -X GET \
    -H "Authorization: Bearer YOUR_API_KEY" \
    "{{baseUrl}}/u/:id/stats?start_date=2024-01-01&amp;end_date=2024-12-31"</code>
            <button class="action-btn" data-clipboard data-clipboard-content="#json-url-stats-body"><span>Copy</span></button>
        </div>
    </div>
    <dl>
        <dt>Query Parameters:</dt>
        <dd>
            <ul>
                <li><code>start_date</code> (optional): Start date for stats (YYYY-MM-DD)</li>
                <li><code>end_date</code> (optional): End date for stats (YYYY-MM-DD)</li>
            </ul>
        </dd>
    </dl>

    <strong>3. List URLs</strong>
    <div class="labeled-code-block">
        <span class="command-label curl-label">CURL</span>
        <div class="code-block">
            <code id="json-url-list-body">curl -X GET \
    -H "Authorization: Bearer YOUR_API_KEY" \
    "{{baseUrl}}/u/list?page=1&amp;limit=10"</code>
            <button class="action-btn" data-clipboard data-clipboard-content="#json-url-list-body"><span>Copy</span></button>
        </div>
    </div>
    <dl>
        <dt>Query Parameters:</dt>
        <dd>
            <ul>
                <li><code>page</code> (optional): Page number (default: 1)</li>
                <li><code>limit</code> (optional): Items per page (default: 10)</li>
            </ul>
        </dd>
    </dl>
</section>

<section id="url-management">
    <h2>URL Management</h2>

    <strong>1. List URLs</strong>
    <div class="labeled-code-block">
        <span class="command-label curl-label">CURL</span>
        <div class="code-block">
            <code id="json-url-list-body">curl -X GET \
    -H "Authorization: Bearer YOUR_API_KEY" \
    "{{baseUrl}}/u/list?page=1&amp;limit=10"</code>
            <button class="action-btn" data-clipboard data-clipboard-content="#json-url-list-body"><span>Copy</span></button>
        </div>
    </div>
    <dl>
        <dt>Query Parameters:</dt>
        <dd>
            <ul>
                <li><code>page</code> (optional): Page number (default: 1)</li>
                <li><code>limit</code> (optional): Items per page (default: 10)</li>
            </ul>
        </dd>
    </dl>

    <strong>2. URL Stats</strong>
    <div class="labeled-code-block">
        <span class="command-label curl-label">CURL</span>
        <div class="code-block">
            <code id="json-url-stats-body">curl -X GET \
    -H "Authorization: Bearer YOUR_API_KEY" \
    "{{baseUrl}}/u/:id/stats?start_date=2024-01-01&amp;end_date=2024-12-31"</code>
            <button class="action-btn" data-clipboard data-clipboard-content="#json-url-stats-body"><span>Copy</span></button>
        </div>
    </div>
    <dl>
        <dt>Query Parameters:</dt>
        <dd>
            <ul>
                <li><code>start_date</code> (optional): Start date for stats (YYYY-MM-DD)</li>
                <li><code>end_date</code> (optional): End date for stats (YYYY-MM-DD)</li>
            </ul>
        </dd>
    </dl>

    <strong>3. Update URL Expiration</strong>
    <div class="labeled-code-block">
        <span class="command-label curl-label">CURL</span>
        <div class="code-block">
            <code id="json-url-expire-body">curl -X PUT \
    -H "Authorization: Bearer YOUR_API_KEY" \
    -H "Content-Type: application/json" \
    -d '{
        "expires_at": "2024-12-31T23:59:59Z"
    }' \
    {{baseUrl}}/u/:id/expire</code>
            <button class="action-btn" data-clipboard data-clipboard-content="#json-url-expire-body"><span>Copy</span></button>
        </div>
    </div>
    <dl>
        <dt>Content-Type:</dt>
        <dd>application/json</dd>
        <dt>Body:</dt>
        <dd>
            <div class="code-block json">
                <pre><code id="json-url-expire-body">{
    // One of the following is required:
    "expires_in": "string",   // Optional (e.g., "24h" or "never")
    "expires_at": "string",   // Optional (YYYY-MM-DD)
}</code></pre>
                <button class="action-btn" data-clipboard data-clipboard-selector="#json-url-expire-body"><span>Copy</span></button>
            </div>
        </dd>
    </dl>

    <strong>4. Delete URL</strong>
    <div class="labeled-code-block">
        <span class="command-label curl-label">CURL</span>
        <div class="code-block">
            <code>curl -X DELETE \
    -H "Authorization: Bearer YOUR_API_KEY" \
    "{{baseUrl}}/u/:id"</code>
            <button class="action-btn" data-clipboard><span>Copy</span></button>
        </div>
    </div>
    <dl>
        <dt>Response:</dt>
        <dd>
            <div class="code-block json">
                <pre><code id="json-url-delete-response">{
    "success": true,
    "message": "URL deleted successfully"
}</code></pre>
                <button class="action-btn" data-clipboard data-clipboard-selector="#json-url-delete-response"><span>Copy</span></button>
            </div>
        </dd>
    </dl>
</section>
{{/if}}

<section id="limits-retention">
    <h2>Limits & Retention</h2>

    <ul>
        <li>Maximum file size: <code>{{maxSize}}</code></li>
        {{#if apiKeysEnabled}}
        <li>Retention periods:
            <ul>
                <li>Without API key: <code>{{retention.noKey}}</code></li>
                <li>With API key: <code>{{retention.withKey}}</code></li>
            </ul>
        </li>
        {{else}}
        <li>Retention period: <code>{{retention.noKey}}</code></li>
        {{/if}}
        <li>Rate limits:
            <ul>
                <li>Global: <code>{{rateLimits.global}}</code></li>
                <li>Per IP: <code>{{rateLimits.perIP}}</code></li>
            </ul>
        </li>
    </ul>
</section>

<section id="support">
    <h2>Support</h2>

    <p>
        For support, bug reports, or feature requests, please visit our
        <a href="https://github.com/watzon/0x45/issues">GitHub Issues</a> page.
    </p>
</section>